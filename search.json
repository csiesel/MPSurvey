[{"path":[]},{"path":"https://csiesel.github.io/MPSurvey/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Casey Siesel. Author, maintainer.","code":""},{"path":"https://csiesel.github.io/MPSurvey/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Siesel C (2025). MPSurvey: MPSurvey: Mobile Phone Survey Data Analysis. R package version 0.0.0.9510, https://github.com/csiesel/MPSurvey.","code":"@Manual{,   title = {MPSurvey: MPSurvey: Mobile Phone Survey Data Analysis},   author = {Casey Siesel},   year = {2025},   note = {R package version 0.0.0.9510},   url = {https://github.com/csiesel/MPSurvey}, }"},{"path":"https://csiesel.github.io/MPSurvey/index.html","id":"mpsurvey","dir":"","previous_headings":"","what":"MPSurvey: Mobile Phone Survey Data Analysis","title":"MPSurvey: Mobile Phone Survey Data Analysis","text":"goal MPSurvey reduce burden analyzing mobile phone surveys utilize Surveda mobile phone survey tool. functions package cover aspects analysis including applying data labels, identifying skip logic patterns, calculating item nonresponse, analyzing weighted survey data.","code":""},{"path":"https://csiesel.github.io/MPSurvey/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"MPSurvey: Mobile Phone Survey Data Analysis","text":"can install development version MPSurvey GitHub :","code":"# install.packages(\"pak\") pak::pak(\"csiesel/MPSurvey\")"},{"path":"https://csiesel.github.io/MPSurvey/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"MPSurvey: Mobile Phone Survey Data Analysis","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(MPSurvey) #> Loading required package: dplyr #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://csiesel.github.io/MPSurvey/reference/analyze_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Survey Data — analyze_survey","title":"Analyze Survey Data — analyze_survey","text":"function analyzes survey data using gtsummary package. creates summary table specified variables, stratified sex, includes overall statistics, sample sizes, confidence intervals.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/analyze_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Survey Data — analyze_survey","text":"","code":"analyze_survey(mps, vars)"},{"path":"https://csiesel.github.io/MPSurvey/reference/analyze_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Survey Data — analyze_survey","text":"mps survey design object created using srvyr package. vars character vector variable names include analysis.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/analyze_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Survey Data — analyze_survey","text":"gtsummary object containing summary table analyzed survey data.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/analyze_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Survey Data — analyze_survey","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: summary_table <- analyze_survey(mps = your_survey_design, vars = c(\"var1\", \"var2\", \"var3\")) } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/analyze_survey2.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Survey Data (v2) — analyze_survey2","title":"Analyze Survey Data (v2) — analyze_survey2","text":"function analyzes survey data using gtsummary package. creates summary table specified variables, stratified sex, includes overall statistics, sample sizes, confidence intervals.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/analyze_survey2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Survey Data (v2) — analyze_survey2","text":"","code":"analyze_survey2(mps, vars, strata)"},{"path":"https://csiesel.github.io/MPSurvey/reference/analyze_survey2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Survey Data (v2) — analyze_survey2","text":"mps survey design object created using srvyr package. vars character vector variable names include analysis.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/analyze_survey2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Survey Data (v2) — analyze_survey2","text":"gtsummary object containing summary table analyzed survey data.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/analyze_survey2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Survey Data (v2) — analyze_survey2","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: summary_table <- analyze_survey(mps = your_survey_design, vars = c(\"var1\", \"var2\", \"var3\")) } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/apply_skiplogic.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Skip Logic to Survey Data — apply_skiplogic","title":"Apply Skip Logic to Survey Data — apply_skiplogic","text":"function applies skip logic survey data frame based skip logic rules defined JSON file. modifies survey data frame setting values \"APPLICABLE\" skip logic conditions met.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/apply_skiplogic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Skip Logic to Survey Data — apply_skiplogic","text":"","code":"apply_skiplogic(path = NULL, x = NULL)"},{"path":"https://csiesel.github.io/MPSurvey/reference/apply_skiplogic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Skip Logic to Survey Data — apply_skiplogic","text":"path character string specifying path JSON file containing skip logic rules. Default NULL. x data frame tibble containing survey data. Default NULL.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/apply_skiplogic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Skip Logic to Survey Data — apply_skiplogic","text":"modified data frame skip logic applied.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/apply_skiplogic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Skip Logic to Survey Data — apply_skiplogic","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: modified_data <- apply_skiplogic(path = \"path/to/your/skiplogic.json\", x = your_survey_data) } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/export_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Results to Excel — export_results","title":"Export Results to Excel — export_results","text":"function takes results statistical analysis, processes data extract relevant statistics, exports processed data Excel file.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/export_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Results to Excel — export_results","text":"","code":"export_results(results, file)"},{"path":"https://csiesel.github.io/MPSurvey/reference/export_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Results to Excel — export_results","text":"results list containing results statistical analysis. list component named table_body data frame containing raw data. file string specifying path output Excel file.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/export_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Results to Excel — export_results","text":"None. function writes processed data Excel file.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/export_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Results to Excel — export_results","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: export_results(results = your_survey_results, file = \"path/to/export/file.xlsx\") } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/export_results2.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Results to Excel (v2) — export_results2","title":"Export Results to Excel (v2) — export_results2","text":"function takes results statistical analysis, processes data extract relevant statistics, exports processed data Excel file.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/export_results2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Results to Excel (v2) — export_results2","text":"","code":"export_results2(results, file)"},{"path":"https://csiesel.github.io/MPSurvey/reference/export_results2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Results to Excel (v2) — export_results2","text":"results list containing results statistical analysis. list component named table_body data frame containing raw data. file string specifying path output Excel file.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/export_results2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Results to Excel (v2) — export_results2","text":"None. function writes processed data Excel file.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/export_results2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Results to Excel (v2) — export_results2","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: export_results2(results = your_survey_results, file = \"path/to/export/file.xlsx\") } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/get_codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Codebook from JSON File — get_codebook","title":"Extract Codebook from JSON File — get_codebook","text":"function reads JSON file specified path, extracts codebook information, returns data frame variable names, values, response options.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Codebook from JSON File — get_codebook","text":"","code":"get_codebook(path = NULL)"},{"path":"https://csiesel.github.io/MPSurvey/reference/get_codebook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Codebook from JSON File — get_codebook","text":"path character string specifying path JSON file containing codebook information. Default NULL.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_codebook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Codebook from JSON File — get_codebook","text":"data frame containing codebook information, including variable names, values, response options.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_codebook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Codebook from JSON File — get_codebook","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: codebook <- get_codebook(path = \"path/to/your/codebook.json\") } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/get_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Descriptions from JSON File — get_descriptions","title":"Get Descriptions from JSON File — get_descriptions","text":"function reads JSON file specified path, extracts descriptions, returns tibble variable names corresponding descriptions.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Descriptions from JSON File — get_descriptions","text":"","code":"get_descriptions(path = NULL)"},{"path":"https://csiesel.github.io/MPSurvey/reference/get_descriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Descriptions from JSON File — get_descriptions","text":"path character string specifying path JSON file. Default NULL.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Descriptions from JSON File — get_descriptions","text":"tibble two columns: var (variable names) desc (descriptions).","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_descriptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Descriptions from JSON File — get_descriptions","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: descriptions <- get_descriptions(\"path/to/your/jsonfile.json\") } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/get_inr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Item Non-Response (INR) Rates — get_inr","title":"Calculate Item Non-Response (INR) Rates — get_inr","text":"function calculates item non-response (INR) rates specified variables survey design object. returns list containing INR rates response distributions variable.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_inr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Item Non-Response (INR) Rates — get_inr","text":"","code":"get_inr(   mps = NULL,   vars = NULL,   include_skips = FALSE,   skip_words = c(\"Skip\", \"SKIP\", \"skip\", \"REFUSED\", \"Refused\", \"refused\") )"},{"path":"https://csiesel.github.io/MPSurvey/reference/get_inr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Item Non-Response (INR) Rates — get_inr","text":"mps survey design object created using srvyr package. Default NULL. vars character vector variable names calculate INR rates. Default NULL. include_skips logical value indicating whether include skip patterns analysis. Default FALSE. skip_words character vector words indicating skip patterns (e.g., \"Skip\", \"REFUSED\"). Default c(\"Skip\", \"SKIP\", \"skip\", \"REFUSED\", \"Refused\", \"refused\").","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_inr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Item Non-Response (INR) Rates — get_inr","text":"list containing two elements: inr (tibble INR rates) responses (tibble response distributions).","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_inr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Item Non-Response (INR) Rates — get_inr","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: inr_results <- get_inr(mps = your_survey_design, vars = c(\"var1\", \"var2\"), include_skips = FALSE) inr <- inr_results$inr responses <- inr_results$responses } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/get_skiplogic.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Skip Logic from JSON File — get_skiplogic","title":"Extract Skip Logic from JSON File — get_skiplogic","text":"function reads JSON file specified path, extracts skip logic rules, returns data frame skip logic information.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_skiplogic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Skip Logic from JSON File — get_skiplogic","text":"","code":"get_skiplogic(path = NULL)"},{"path":"https://csiesel.github.io/MPSurvey/reference/get_skiplogic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Skip Logic from JSON File — get_skiplogic","text":"path character string specifying path JSON file containing skip logic rules. Default NULL.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_skiplogic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Skip Logic from JSON File — get_skiplogic","text":"data frame containing skip logic information, including variables, question IDs, question text, response values, skip logic conditions.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/get_skiplogic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Skip Logic from JSON File — get_skiplogic","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: skip_logic <- get_skiplogic(path = \"path/to/your/skiplogic.json\") } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/label_data.html","id":null,"dir":"Reference","previous_headings":"","what":"label_data — label_data","title":"label_data — label_data","text":"label_data","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/label_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"label_data — label_data","text":"","code":"label_data(x = NULL, codebook = NULL)"},{"path":"https://csiesel.github.io/MPSurvey/reference/label_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"label_data — label_data","text":"x data.frame() object containing raw survey data codebook data.frame() object containing columns options, values, grp, orders: options : raw data values dataset values : label values defined raw value options grp : grouping value raw data values. Often question level grouping may cut across multiple questions common responses (.e. 'yn' yes questions) orders : order labels appear factor levels","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/label_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"label_data — label_data","text":"labelled data.frame() object data values replaced values column codebook based data value defined options.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/label_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"label_data — label_data","text":"","code":"# Codebook data frame cb = data.frame(   options = c(1, 2, 1, 2, 3),   values = c(\"Yes\", \"No\", \"Urban\", \"Rural\", \"Other\"),   grp = c(\"yn\", \"yn\", \"geo\", \"geo\", \"geo\"),   orders = c(1, 2, 1, 2, 3) )  # Raw, unlabeled dataset data = data.frame(   yn = c(1, 1, 2),   geo = c(3, 1, 2) )  # Labeled output label_data(data, cb) #>    yn   geo #> 1 Yes Other #> 2 Yes Urban #> 3  No Rural"},{"path":"https://csiesel.github.io/MPSurvey/reference/mps_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Survey Design Object — mps_design","title":"Create Survey Design Object — mps_design","text":"function creates survey design object using srvyr package. takes data frame specified columns IDs, strata, weights, variables, returns survey design object.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/mps_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Survey Design Object — mps_design","text":"","code":"mps_design(df = NULL, ids, strata, weight, vars)"},{"path":"https://csiesel.github.io/MPSurvey/reference/mps_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Survey Design Object — mps_design","text":"df data frame containing survey data. Default NULL. ids column name data frame representing cluster primary sampling unit (PSU) IDs. strata column name data frame representing strata. weight column name data frame representing survey weights. vars character vector variable names include survey design.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/mps_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Survey Design Object — mps_design","text":"survey design object created using srvyr package.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/mps_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Survey Design Object — mps_design","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: survey_design <- mps_design(df = your_dataframe, ids = \"psu_id\", strata = \"strata\", weight = \"weight\", vars = c(\"var1\", \"var2\", \"var3\")) } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/recode_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Variables in a Data Frame — recode_var","title":"Recode Variables in a Data Frame — recode_var","text":"function recodes specified variables data frame grouping , summarizing counts, allowing user manually input new values recoded variable. function returns updated data frame recoded variable.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/recode_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Variables in a Data Frame — recode_var","text":"","code":"recode_var(x, vars, new_var)"},{"path":"https://csiesel.github.io/MPSurvey/reference/recode_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Variables in a Data Frame — recode_var","text":"x data frame tibble containing data recoded. vars character vector variable names recoded. new_var character string specifying name new recoded variable.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/recode_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Variables in a Data Frame — recode_var","text":"data frame recoded variable.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/recode_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Variables in a Data Frame — recode_var","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: updated_data <- recode_var(x = your_data, vars = c(\"var1\", \"var2\"), new_var = \"new_var\") } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/set_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Descriptions for Variables — set_descriptions","title":"Set Descriptions for Variables — set_descriptions","text":"function reads JSON file specified path get existing descriptions, allows user set new descriptions variables already described. function returns tibble variable names corresponding descriptions.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/set_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Descriptions for Variables — set_descriptions","text":"","code":"set_descriptions(path = NULL, x = NULL)"},{"path":"https://csiesel.github.io/MPSurvey/reference/set_descriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Descriptions for Variables — set_descriptions","text":"path character string specifying path JSON file. Default NULL. x data frame tibble containing variables descriptions need set. Default NULL.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/set_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Descriptions for Variables — set_descriptions","text":"tibble two columns: var (variable names) desc (descriptions).","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/set_descriptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Descriptions for Variables — set_descriptions","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: descriptions <- set_descriptions(path = \"path/to/your/jsonfile.json\", x = your_dataframe) } # }"},{"path":"https://csiesel.github.io/MPSurvey/reference/survey_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Survey Variables for Analysis — survey_variables","title":"Select Survey Variables for Analysis — survey_variables","text":"function allows user select variables analyze given description data frame. function returns vector variable names selected analysis.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/survey_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Survey Variables for Analysis — survey_variables","text":"","code":"survey_variables(desc = NULL)"},{"path":"https://csiesel.github.io/MPSurvey/reference/survey_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Survey Variables for Analysis — survey_variables","text":"desc data frame tibble containing variable descriptions. Default NULL.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/survey_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Survey Variables for Analysis — survey_variables","text":"character vector variable names selected analysis.","code":""},{"path":"https://csiesel.github.io/MPSurvey/reference/survey_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Survey Variables for Analysis — survey_variables","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: selected_vars <- survey_variables(desc = your_description_dataframe) } # }"}]
